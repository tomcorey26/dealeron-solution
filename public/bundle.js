(()=>{"use strict";const e={N:!0,E:!0,S:!0,W:!0},r={M:!0,L:!0,R:!0},t=document.querySelector("form");t.addEventListener("submit",(n=>{n.preventDefault();const o=(t=>{const n=t.querySelector("textarea").value.trim().split("\n");let o=[];return n.forEach(((t,n)=>{const l=t.split(" ").join("");if(!((t,n)=>{const o=n%2!=0&&0!==n;let l;return l=0===n?(e=>{e.length>2&&alert(`Error: ${e.length} inputs provided for corner, only 2 required`);for(let r=0;r<e.length;r++){let t=e[r];if(isNaN(t))return alert(`Incorrect corner position input ${t}, please pass numbers only`),!1}return!0})(t):o?(r=>{r.length>3&&alert(`Error: ${r.length} inputs provided for rover position, only 3 required`);const t=r[0],n=r[1],o=r[2];return isNaN(t)||isNaN(n)?(alert(`Incorrect rover position input (${t},${n}), please pass numbers only`),!1):o in e||(alert(`Incorrect rover direction input (${o}), please pass NESW only `),!1)})(t):(e=>{for(let t=0;t<e.length;t++){let n=e[t];if(!(n in r))return alert(`Incorrect corner rover movement input ${n}, please pass MRL only`),!1}return!0})(t),l})(l,n))return null;o.push(l)})),o})(t);console.log(o)}))})();