(()=>{"use strict";const r={N:!0,E:!0,S:!0,W:!0},e={M:!0,L:!0,R:!0},t=document.querySelector("form");t.addEventListener("submit",(n=>{n.preventDefault();const o=(t=>{const n=t.querySelector("textarea").value.trim().split("\n");if(n.length<4)return alert(`only ${n.length} inputs given, 4 or more required`),null;if((n.length-1)%2!=0)return alert("Missing Rover instructions or position"),null;let o=[];return n.forEach(((t,n)=>{const l=t.split(" ").join("");if(!((t,n)=>{const o=n%2!=0&&0!==n;let l;return l=0===n?(r=>{r.length>2&&alert(`Error: ${r.length} inputs provided for corner, only 2 required`),r.length<2&&alert(`Error: ${r.length} inputs provided for corner,2 required`);for(let e=0;e<r.length;e++){let t=r[e];if(isNaN(t))return alert(`Incorrect corner position input ${t}, please pass numbers only`),!1}return!0})(t):o?(e=>{e.length>3&&alert(`Error: ${e.length} inputs provided for rover position, only 3 required`);const t=e[0],n=e[1],o=e[2];return isNaN(t)||isNaN(n)?(alert(`Incorrect rover position input (${t},${n}), please pass numbers only`),!1):o in r||(alert(`Incorrect rover direction input (${o}), please pass NESW only `),!1)})(t):(r=>{for(let t=0;t<r.length;t++){let n=r[t];if(!(n in e))return alert(`Incorrect corner rover movement input ${n}, please pass MRL only`),!1}return!0})(t),l})(l,n))return null;o.push(l)})),o})(t);console.log(o)}))})();